#content-main-container.admin-section
  #content-main-wrapper
    #content-main-wide.admin
      %h1="Entries for #{@external_feed.title}"
      %p="Total entries: #{@external_feed.entries.size}"
      %p="Unclassified entries: #{@entries.size}"
      .entries
        - @entries.each do |entry|
          .entry{:id => "entry_#{entry.id}"}
            %p.title=link_to "#{entry.id} - #{entry.title}", entry.url, :target => "_blank"
            %p.published
              ="Published #{distance_of_time_in_words_to_now(entry.published)} ago"
              =", with approx. #{entry.content.split.size} words" unless entry.content.blank?
            .actions
              %p.classify
              - if entry.classified?
                %span This entry has been marked as classified. 
                %span=link_to "(unmark classified)", "/admin/external_feeds/#{@external_feed.id}/entries/#{entry.id}/unclassify", :method => "POST"
              - else
                =link_to "Mark as classified", "/admin/external_feeds/#{@external_feed.id}/entries/#{entry.id}/classify", :method => "POST"
            
            
              %table.classification
                %tbody
                - entry.organizations.each do |organization|
                  - assoc = ExternalFeedEntriesOrganization.find_by_assoc(entry, organization)
                  %tr
                    %td.organization=link_to organization.name, organization_path(organization), :target => '_blank'
                    %td.publish_count=assoc.publish_count
                    %td.action=link_to "publish", "/admin/external_feeds/#{@external_feed.id}/entries/#{entry.id}/publishers/#{organization.id}/publish", :method => "POST"
                    %td.action=link_to "remove", "/admin/external_feeds/#{@external_feed.id}/entries/#{entry.id}/publishers/#{organization.id}", :method => "DELETE"
              - form_tag "/admin/external_feeds/#{@external_feed.id}/entries/#{entry.id}/publishers" do
                .organization_finder_for_publish
                  %div{:id => "entry_#{entry.id}_organization"}
                    %div{:id => "entry_#{entry.id}_organization_container"}
                      = hidden_field_tag "entry_#{entry.id}_organization[id]", nil
                      = text_field_tag "entry_#{entry.id}_organization[name]", "", :autocomplete => "off"
                      .in-place-results
                        .holder
                %p.button.add=submit_tag "Add"
            .content
              - if entry.content
                %p.summary=strip_tags(entry.content)
              - else 
                %p.summary=strip_tags(entry.summary)
            %br
            %br


:javascript
  jQuery(document).ready(function()
  {
    jQuery.each(jQuery(".organization_finder_for_publish > div"), function()
    {
      namespace = jQuery(this).attr("id")
      searchify_section("#" + namespace, "/autocomplete/organizations");    
    })
  })
  
  jQuery("form").bind('submit', function(e)
  {
    e.stopPropagation();
    var form = jQuery(this);
    var params = extract_parameters_from(form);

    jQuery.ajax(
    {
      url: jQuery(this).attr("action"),
      type: "POST",
      data: params,
      dataType: "json",
      beforeSend: function()
      {
        jQuery("#form-error", form).hide();
        jQuery("input[type='text']", form).removeClass("error");
        submit_button_label = jQuery("input[type='submit']", form).attr('value');
        jQuery("input[type='submit']", form).attr('value', "Processing...");
      },
      complete: function()
      {
        jQuery("input[type='submit']", form).attr('value', submit_button_label);
      },
      error: function(XMLHttpRequest, textStatus, errorThrown)
      {
        var errors_for_models = jQuery.evalJSON(XMLHttpRequest.responseText);
      },
      success: function(json, textStatus)
      {
        jQuery("input[type='submit']", form).attr('value', "Redirecting...");
        window.location.replace(json.url);
      
        /**
        var entry_id = json.entry.external_feed_entry.id;
        var organization_id = json.organization.organization.id;
        var name = json.organization.organization.name;
        
        html  = "<p class='organization'>" + name + "</p>"
        html += "<p class='actions'>"
        html += "<span><a href='/admin/external_feeds/#{@external_feed.id}/entries/" + entry_id + "/publishers/" + organization_id + "/publish'>publish</a>"
        html += "</p>"
        
        jQuery(".organizations", jQuery("#entry_" + entry_id)).append(html)
        */
      }
    });    
    return false;
  })