#content-main-container.admin-section
  #content-main-wrapper
    #content-main-wide.admin
      .main-section
        
        .review-toolbar
          .entry{:id => "entry_#{@entry.id}"}
            %p.title=link_to "#{@entry.id} - #{@entry.title}", @entry.url, :target => "_blank"
            %p.published
              ="Published #{distance_of_time_in_words_to_now(@entry.published)} ago"
              =", with approx. #{@entry.content.split.size} words" unless @entry.content.blank?
          %p.button.add{:class => "#{'hide' if @entry.reviewed == 1}"}=link_to_remote_with_local_response_handling "mark as reviewed", :url => "/admin/external_feeds/#{@entry.external_feed.id}/entries/#{@entry.id}/review", :success => "handle_success_for_review(request)", :method => "POST"
          %p.button.add{:class => "#{'hide' if @entry.reviewed != 1}"}=link_to_remote_with_local_response_handling "reviewed - unmark as reviewed", :url => "/admin/external_feeds/#{@entry.external_feed.id}/entries/#{@entry.id}/unreview", :success => "handle_success_for_unreview(request)", :method => "POST"
              
          = render :partial => "/admin/external_feed_entries/publish_to_organizations"
          = render :partial => "/admin/external_feed_entries/publish_to_communities"
          
        = #%iframe{:src=>"#{@entry.url}", :scrolling => 'auto', :frameborder => 0, :allowtransparency => true, :sandbox => "allow-same-origin allow-forms allow-scripts"}
        %br
:javascript

  jQuery(document).ready(function()
  { 
    var organization_template_string = "#{@organization_json_template}";
    organization_collection_template = jsontemplate.Template("{{.repeated section organizations}}" + organization_template_string + "{{.end}}", {'undefined_str': "0", meta: '{{}}'});
    organization_row_template = jsontemplate.Template(organization_template_string, {'undefined_str': "0", meta: '{{}}'});
    
    var community_template_string = "#{@community_json_template}";
    community_collection_template = jsontemplate.Template("{{.repeated section communities}}" + community_template_string + "{{.end}}", {'undefined_str': "0", meta: '{{}}'});
    community_row_template = jsontemplate.Template(community_template_string, {'undefined_str': "0", meta: '{{}}'});
    
    load_organizations();
    load_communities();
  })
  
  
  function load_organizations()
  {
    jQuery.ajax(
    {
      url: "/admin/external_feeds/#{@entry.external_feed.id}/entries/#{@entry.id}/publishers",
      type: "GET",
      dataType: "json",
      complete: function(request) {},
      success: function(json)
      {
        var s = organization_collection_template.expand(json);
        jQuery("tbody.organizations").prepend(s)
      }
    });
  }
  
  function load_communities()
  { 
    jQuery.ajax(
    {
      url: "/admin/external_feeds/#{@entry.external_feed.id}/entries/#{@entry.id}/communities",
      type: "GET",
      dataType: "json",
      complete: function(request) {},
      success: function(json)
      {
        var s = community_collection_template.expand(json);
        jQuery("tbody.communities").prepend(s)
      }
    });
  }

  function handle_success_for_review(response)
  {
    jQuery(".not_reviewed").hide();
    jQuery(".reviewed").show();
  }
  
  function handle_success_for_unreview(response)
  {
    jQuery(".not_reviewed").show();
    jQuery(".reviewed").hide();
  }
  
  function handle_failure(request)
  {
  }
  
  function handle_success_for_publish_all(response)
  {
    jQuery.each(jQuery('.publish_count'), function()
    {
      value = parseInt(jQuery(this).html());
      jQuery(this).html(value + 1);
    })
  }
