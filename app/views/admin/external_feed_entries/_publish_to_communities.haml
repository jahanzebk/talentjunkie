#publish-to-communities 
  %h3 Publish to communities' feed
  %table.classification
    %tbody.communities
      %tr
        %td.action{:colspan => 4}=link_to_remote_with_local_response_handling "publish all and mark as reviewed", :url => "/admin/external_feeds/#{@entry.external_feed.id}/entries/#{@entry.id}/publish_to_all", :success => "handle_success_for_publish_all(request)" , :method => "PUT"

  - form_tag "/admin/external_feeds/#{@entry.external_feed.id}/entries/#{@entry.id}/communities" do  
    = hidden_field_tag "entry[id]", @entry.id
    #community
      = text_field_tag "entry[community_attributes[name]]", nil, {:id => "entry_community_name", :autocomplete => "off"}
      .in-place-results
        .holder
    %p.button.add=submit_tag "Add"

:javascript
  jQuery(document).ready(function()
  {
    searchify_section("#community", "/autocomplete/communities");

    jQuery("#publish-to-communities form").bind('submit', function(e)
    {
      e.stopPropagation();
      var form = jQuery(this);

      jQuery.ajax(
      {
        url: jQuery(this).attr("action"),
        type: "POST",
        data: form.serialize(),
        dataType: "json",
        beforeSend: function() {},
        complete: function() {},
        error: function(XMLHttpRequest, textStatus, errorThrown) {},
        success: function(json, textStatus)
        {
          var s = community_row_template.expand(json);
          jQuery("tbody.communities").prepend(s);
        }
      });    
      return false;
    })
  })

  function community_handle_success_for_publish(response)
  {
    response_object = eval(response);
    community_id = response_object.community_id;
    jQuery(".publish_count", jQuery("#community_" + community_id + "_assoc")).html(response_object.count);
  }
  