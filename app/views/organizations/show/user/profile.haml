#content-header-container.organization-profile
  #content-header
    #organization-profile-header
      = render :partial => "/organizations/show/user/profile_summary.haml", :locals => {:organization => @organization}
              
#content-main-container
  = render :partial => "/organizations/show/user/navigation.haml", :locals => {:organization => @organization}
  #content-main-wrapper
    #content-main
      #organization-profile.main-section
      
        - if @organization.summary.present? or @organization.contracts.current.to_a.size > 0 or @organization.positions.with_openings.size > 0
          = render :partial => "/organizations/summary.haml", :locals => { :organization => @organization }
          = render :partial => "/organizations/employees.haml", :locals => { :organization => @organization } if @organization.contracts.current.to_a.size > 0
          = render :partial => "/organizations/show/open_positions.haml", :locals => { :organization => @organization } if @organization.positions.with_openings.size > 0
        - else 
          %p.none-available="There is no information available for #{@organization.name}."

  = render :partial => "/organizations/sideboxes/sidebar", :locals => { :organization => @organization, :crunchbase_info => @crunchbase_info }

:javascript
  function handle_request(anchor)
  {
    var anchor = jQuery(anchor);
    var url = anchor.attr('href');

    jQuery.ajax(
    {
      url: url,
      type: "POST",
      dataType: "json",
      beforeSend: function()
      {
        jQuery("#form-error").hide();
        jQuery("span.follow.button").hide();
        jQuery("span.processing").show();
        },
      complete: function()
      {
        jQuery("span.processing").hide();
      },
      error: function(XMLHttpRequest, textStatus, errorThrown)
      {
        var error = jQuery.evalJSON(XMLHttpRequest.responseText);

        var messages = "";

        jQuery.each(error, function()
        {
          field         = jQuery("#user_" + jQuery(this)[0]);
          error_message = jQuery(this)[1];
          label         = field.attr("field_name");

          field.addClass("error");
          messages += label + " " + error_message + "<br />";
        })

        if(messages)
          jQuery("#form-error").html(messages);
        jQuery("#form-error").fadeIn("slow");

      },
      success: function(json, textStatus)
      {
        jQuery("span.processing").hide(10, function(){jQuery("span.is_following").show()});
      }
    });    
    return false;
  }